#include <iostream>
using namespace std;

class Node {
public:
    int data;
    Node* link;

    Node(int n) {
        this->data = n;
        this->link = nullptr;
    }
};

class Stack {
    Node *top;
public:
    Stack() {
        top = nullptr;
    }

    void push(int data) {
        Node* temp = new Node(data);

        if (!temp) {
            cout << "Stack Overflow" << endl;
            exit(1);
        }
        temp->data = data;
        temp->link = top;
        top = temp;
    }

    bool isEmpty() {
        return top == nullptr;
    }

    int peek() {
        if (!isEmpty()) {
            return top->data;
        }
        else {
            cout << "Stack is empty" << endl;
        }
    }

    void pop() {
        if (top == nullptr) {
            cout << "Stack Underflow" << endl;
            exit(1);
        }
        else {
            Node* temp = top;
            top = top->link;
            delete temp;
        }
    }

    void display() {
        Node* temp = top;
        while (temp != nullptr) {
            cout << temp->data;
            temp = temp->link;

            if (temp != nullptr) {
                cout << " -> ";
            }
        }
        cout << endl;
    }

    int topElement() {
        if (!isEmpty()) {
            return top->data;
        }
        else {
            cout << "Stack is empty" << endl;
        }
    }
};

int main() {
    Stack st;

    st.push(11);
    st.push(12);
    st.push(13);
    st.display();

    st.pop();
    st.display();

    cout << "Top element is: " << st.topElement() << endl;
    return 0;
}
