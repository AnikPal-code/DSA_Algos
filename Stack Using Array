#include<bits/stdc++.h>
using namespace std;

class Stack {
    public:
        int *arr;
        int top;
        int size;

    Stack(int size) {
        this->size = size;
        arr = new int[size];
        top = -1;
    }

    void push(int element) {
        if (size - top > 1) {
            top++;
            arr[top] = element;
        } else {
            cout << "Stack Overflown" << endl;
        }
    }

    void pop() {
        if (top >= 0) {
            top--;
        } else {
            cout << "Stack Underflown" << endl;
        }
    }

    int peek() {
        if (top >= 0) {
            return arr[top];
        } else {
            cout << "Stack is Empty" << endl;
            return -1;
        }
    }

    void printElements() {
        if (top >= 0) {
            cout << "Stack elements are: ";
            for (int i = top; i >= 0; i--) {
                cout << arr[i] << " ";
            }
            cout << endl;
        } else {
            cout << "Stack is Empty" << endl;
        }
    }

    bool isEmpty() {
        if (top == -1) {
            return true;
        } else {
            return false;
        }
    }
};

int main() {
    Stack st(5);
    st.push(22);
    st.push(33);
    st.push(44);

    st.printElements();

    cout << "Is stack empty? " << (st.isEmpty() ? "Yes" : "No") << endl;

    cout << "Top element: " << st.peek() << endl;
    st.pop();
    cout << "After popping, top element: " << st.peek() << endl;
    st.pop();
    cout << "After popping, top element: " << st.peek() << endl;
    st.pop();
    cout << "After popping, top element: " << st.peek() << endl;

    cout << "Is stack empty? " << (st.isEmpty() ? "Yes" : "No") << endl;

    return 0;
}
