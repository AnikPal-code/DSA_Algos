#include<bits/stdc++.h>
using namespace std;

vector<int> bfsOfGraph(int V, vector<int> adj[]) {
    vector<int> result;
    vector<bool> visited(V, false);
    queue<int> q;
    
    q.push(0); 
    
    while (!q.empty()) {
        int u = q.front();
        q.pop();
        result.push_back(u);
        visited[u] = true;
        
        for (int v : adj[u]) {
            if (!visited[v]) {
                q.push(v);
                visited[v] = true;
            }
        }
    }
    
    return result;
}

int main() {
    int V, E; 
    cin >> V;
    cin >> E;

    vector<int> adj[V];
    for (int i = 0; i < E; i++) {
        int u, v;
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u); 
    }

    vector<int> result = bfsOfGraph(V, adj);
    for (int node : result) {
        cout << node << " ";
    }
    cout << endl;

    return 0;
}
